/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppNavbar {
    }
    interface AppRoot {
    }
    interface AppRouter {
    }
    interface HomePage {
    }
    interface LoginPage {
    }
    interface SignupPage {
    }
}
export interface LoginPageCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLLoginPageElement;
}
declare global {
    interface HTMLAppNavbarElement extends Components.AppNavbar, HTMLStencilElement {
    }
    var HTMLAppNavbarElement: {
        prototype: HTMLAppNavbarElement;
        new (): HTMLAppNavbarElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLAppRouterElement extends Components.AppRouter, HTMLStencilElement {
    }
    var HTMLAppRouterElement: {
        prototype: HTMLAppRouterElement;
        new (): HTMLAppRouterElement;
    };
    interface HTMLHomePageElement extends Components.HomePage, HTMLStencilElement {
    }
    var HTMLHomePageElement: {
        prototype: HTMLHomePageElement;
        new (): HTMLHomePageElement;
    };
    interface HTMLLoginPageElementEventMap {
        "loginSuccess": void;
    }
    interface HTMLLoginPageElement extends Components.LoginPage, HTMLStencilElement {
        addEventListener<K extends keyof HTMLLoginPageElementEventMap>(type: K, listener: (this: HTMLLoginPageElement, ev: LoginPageCustomEvent<HTMLLoginPageElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLLoginPageElementEventMap>(type: K, listener: (this: HTMLLoginPageElement, ev: LoginPageCustomEvent<HTMLLoginPageElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLLoginPageElement: {
        prototype: HTMLLoginPageElement;
        new (): HTMLLoginPageElement;
    };
    interface HTMLSignupPageElement extends Components.SignupPage, HTMLStencilElement {
    }
    var HTMLSignupPageElement: {
        prototype: HTMLSignupPageElement;
        new (): HTMLSignupPageElement;
    };
    interface HTMLElementTagNameMap {
        "app-navbar": HTMLAppNavbarElement;
        "app-root": HTMLAppRootElement;
        "app-router": HTMLAppRouterElement;
        "home-page": HTMLHomePageElement;
        "login-page": HTMLLoginPageElement;
        "signup-page": HTMLSignupPageElement;
    }
}
declare namespace LocalJSX {
    interface AppNavbar {
    }
    interface AppRoot {
    }
    interface AppRouter {
    }
    interface HomePage {
    }
    interface LoginPage {
        "onLoginSuccess"?: (event: LoginPageCustomEvent<void>) => void;
    }
    interface SignupPage {
    }
    interface IntrinsicElements {
        "app-navbar": AppNavbar;
        "app-root": AppRoot;
        "app-router": AppRouter;
        "home-page": HomePage;
        "login-page": LoginPage;
        "signup-page": SignupPage;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-navbar": LocalJSX.AppNavbar & JSXBase.HTMLAttributes<HTMLAppNavbarElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "app-router": LocalJSX.AppRouter & JSXBase.HTMLAttributes<HTMLAppRouterElement>;
            "home-page": LocalJSX.HomePage & JSXBase.HTMLAttributes<HTMLHomePageElement>;
            "login-page": LocalJSX.LoginPage & JSXBase.HTMLAttributes<HTMLLoginPageElement>;
            "signup-page": LocalJSX.SignupPage & JSXBase.HTMLAttributes<HTMLSignupPageElement>;
        }
    }
}
